package dao;

import model.Category;
import connect.ConnectDB;
import itf.itfCategory;

import java.sql.*;
import java.util.List;
import java.util.ArrayList;

public class daoCategory implements itfCategory {
    private final ConnectDB db = new ConnectDB();

    public List<Category> getAllCategories() {
        List<Category> categories = new ArrayList<>();
        String query = "SELECT * FROM category";
        Connection conn = db.getConnection();
        try (PreparedStatement stmt = conn.prepareStatement(query);
             ResultSet rs = stmt.executeQuery()) {
            while (rs.next()) {
                Category category = new Category(
                    rs.getString("category_id"),
                    rs.getString("category_department_id"),
                    rs.getString("category_name")
                );
                categories.add(category);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            db.closeConnection(conn);
        }
        return categories;
    }

    public Category getCategoryById(int category_id) {
        Category category = null;
        String query = "SELECT * FROM category WHERE category_id = ?";
        Connection conn = db.getConnection();
        try (PreparedStatement stmt = conn.prepareStatement(query)) {
            stmt.setInt(1, category_id);
            try (ResultSet rs = stmt.executeQuery()) {
                if (rs.next()) {
                    category = new Category(
                        rs.getString("category_id"),
                        rs.getString("category_department_id"),
                        rs.getString("category_name")
                    );
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            db.closeConnection(conn);
        }
        return category;
    }

    public boolean insertCategory(Category category) {
        String query = "INSERT INTO category (category_id, category_department_id, category_name) VALUES (?, ?, ?)";
        Connection conn = db.getConnection();
        try (PreparedStatement stmt = conn.prepareStatement(query)) {
            stmt.setString(1, category.getCategory_id());
            stmt.setString(2, category.getCategory_department_id());
            stmt.setString(3, category.getCategory_name());
            int rowsAffected = stmt.executeUpdate();
            return rowsAffected > 0;
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return false;
    }

    public boolean updateCategory(Category category) {
        String query = "UPDATE category SET category_department_id = ?, category_name = ? WHERE category_id = ?";
        Connection conn = db.getConnection();
        try (PreparedStatement stmt = conn.prepareStatement(query)) {
            stmt.setString(1, category.getCategory_department_id());
            stmt.setString(2, category.getCategory_name());
            stmt.setString(3, category.getCategory_id());
            int rowsAffected = stmt.executeUpdate();
            return rowsAffected > 0;
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return false;
    }

    public boolean deleteCategory(int category_id) {
        String query = "DELETE FROM category WHERE category_id = ?";
        Connection conn = db.getConnection();
        try (PreparedStatement stmt = conn.prepareStatement(query)) {
            stmt.setInt(1, category_id);
            int rowsAffected = stmt.executeUpdate();
            return rowsAffected > 0;
        } catch (SQLException e) {
            e.printStackTrace();
        }
        return false;
    }
}